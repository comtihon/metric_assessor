buildscript {
	ext {
		springBootVersion = '1.5.7.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('se.transmode.gradle:gradle-docker:1.2')
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'

sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

sourceSets {
	test_integration {
		java {
			compileClasspath = sourceSets.main.output + configurations.testRuntime
			runtimeClasspath = output + compileClasspath
			srcDir file('src/test_integration/java')
		}
		resources.srcDir file('src/test_integration/resources')
	}
}

task test_integration(type: Test) {
	testClassesDir = sourceSets.test_integration.output.classesDir
	classpath = sourceSets.test_integration.runtimeClasspath
}

check.dependsOn test_integration

jar {
	baseName = 'com.metric.assessor'
	version =  '0.0.1'
}

task buildDocker(type: Docker, dependsOn: build) {
	applicationName = jar.baseName
	dockerfile = file('Dockerfile')
	doFirst {
		copy {
			from jar
			into "${stageDir}/target"
		}
	}
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.modelmapper:modelmapper:1.1.0')
	compile('com.zaxxer:HikariCP')
	runtime('org.postgresql:postgresql')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('com.h2database:h2')
}
